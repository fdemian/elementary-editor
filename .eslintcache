[{"/Users/fdemian/projects/elementary-editor/src/App.js":"1","/Users/fdemian/projects/elementary-editor/src/index.js":"2","/Users/fdemian/projects/elementary-editor/src/lib/DraftRenderer/DraftRenderer.js":"3","/Users/fdemian/projects/elementary-editor/src/lib/DraftRenderer/Renderers.js":"4","/Users/fdemian/projects/elementary-editor/src/lib/DraftRenderer/component.test.js":"5","/Users/fdemian/projects/elementary-editor/src/lib/Editor/BaseEditor.js":"6","/Users/fdemian/projects/elementary-editor/src/lib/Editor/Controls.js":"7","/Users/fdemian/projects/elementary-editor/src/lib/Editor/Editor.js":"8","/Users/fdemian/projects/elementary-editor/src/lib/Editor/EditorStyles.js":"9","/Users/fdemian/projects/elementary-editor/src/lib/Editor/StyleButton.js":"10","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/Buttons.js":"11","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/EditPanel.js":"12","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/KatexOutput.js":"13","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/LatexBlock.js":"14","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/TeXBlock.js":"15","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/test/component.test.js":"16","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/test/utilFunctions.test.js":"17","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/texUtils.js":"18","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Link/Link.js":"19","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Link/RenderLink.js":"20","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Link/component.test.js":"21","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Media/Media.js":"22","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Media/component.test.js":"23","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/QuoteBlock/QuoteBlock.js":"24","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/QuoteBlock/QuoteBlockWrapper.js":"25","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/QuoteBlock/component.test.js":"26","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Spoiler/Spoiler.js":"27","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Spoiler/SpoilerWrapper.js":"28","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Spoiler/component.test.js":"29","/Users/fdemian/projects/elementary-editor/src/lib/Editor/URLInput.js":"30","/Users/fdemian/projects/elementary-editor/src/lib/Editor/test/component.test.js":"31","/Users/fdemian/projects/elementary-editor/src/lib/Editor/test/utils.test.js":"32","/Users/fdemian/projects/elementary-editor/src/lib/Editor/utils.js":"33","/Users/fdemian/projects/elementary-editor/src/lib/index.js":"34","/Users/fdemian/projects/elementary-editor/src/lib/testingUtils.js":"35","/Users/fdemian/projects/elementary-editor/src/setupTests.js":"36"},{"size":6957,"mtime":1607195526783,"results":"37","hashOfConfig":"38"},{"size":146,"mtime":1607195526784,"results":"39","hashOfConfig":"38"},{"size":410,"mtime":1607195575895,"results":"40","hashOfConfig":"38"},{"size":2382,"mtime":1607195526787,"results":"41","hashOfConfig":"38"},{"size":8718,"mtime":1600908123147,"results":"42","hashOfConfig":"43"},{"size":997,"mtime":1607481766806,"results":"44","hashOfConfig":"38"},{"size":2057,"mtime":1607480831696,"results":"45","hashOfConfig":"38"},{"size":10628,"mtime":1607481539083,"results":"46","hashOfConfig":"38"},{"size":3329,"mtime":1607195526800,"results":"47","hashOfConfig":"38"},{"size":802,"mtime":1607195575897,"results":"48","hashOfConfig":"38"},{"size":1306,"mtime":1607195575897,"results":"49","hashOfConfig":"38"},{"size":837,"mtime":1607195575898,"results":"50","hashOfConfig":"38"},{"size":701,"mtime":1607195526806,"results":"51","hashOfConfig":"38"},{"size":640,"mtime":1607735737545,"results":"52","hashOfConfig":"38"},{"size":2467,"mtime":1607348228191,"results":"53","hashOfConfig":"38"},{"size":4266,"mtime":1600908123161,"results":"54","hashOfConfig":"43"},{"size":1888,"mtime":1600908123161,"results":"55","hashOfConfig":"43"},{"size":991,"mtime":1607195575899,"results":"56","hashOfConfig":"38"},{"size":325,"mtime":1607195526819,"results":"57","hashOfConfig":"38"},{"size":149,"mtime":1607195575899,"results":"58","hashOfConfig":"38"},{"size":1016,"mtime":1600908123164,"results":"59","hashOfConfig":"43"},{"size":529,"mtime":1607735737548,"results":"60","hashOfConfig":"38"},{"size":1269,"mtime":1600908123166,"results":"61","hashOfConfig":"43"},{"size":399,"mtime":1607735737551,"results":"62","hashOfConfig":"38"},{"size":306,"mtime":1607195526827,"results":"63","hashOfConfig":"38"},{"size":1267,"mtime":1600908123169,"results":"64","hashOfConfig":"43"},{"size":478,"mtime":1607195526834,"results":"65","hashOfConfig":"38"},{"size":173,"mtime":1607195526836,"results":"66","hashOfConfig":"38"},{"size":1688,"mtime":1600908123171,"results":"67","hashOfConfig":"43"},{"size":1143,"mtime":1607735737556,"results":"68","hashOfConfig":"38"},{"size":10819,"mtime":1600908123173,"results":"69","hashOfConfig":"43"},{"size":6891,"mtime":1600908123174,"results":"70","hashOfConfig":"43"},{"size":2328,"mtime":1607195526847,"results":"71","hashOfConfig":"38"},{"size":240,"mtime":1600908123175,"results":"72","hashOfConfig":"43"},{"size":573,"mtime":1600908123176,"results":"73","hashOfConfig":"43"},{"size":281,"mtime":1605942258675,"results":"74","hashOfConfig":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"n6m9gn",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"w2nju2",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fdemian/projects/elementary-editor/src/App.js",[],["150","151"],"/Users/fdemian/projects/elementary-editor/src/index.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/DraftRenderer/DraftRenderer.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/DraftRenderer/Renderers.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/DraftRenderer/component.test.js",["152","153"],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/BaseEditor.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/Controls.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/Editor.js",["154"],"import React, { useState, useRef, useImperativeHandle } from \"react\";\nimport Draft from \"draft-js\";\nimport { Map } from \"immutable\";\nimport { getTexBlock, removeTeXBlock } from \"./TextElements/Latex/texUtils\";\nimport TeXBlock from \"./TextElements/Latex/TeXBlock\";\nimport Spoiler from \"./TextElements/Spoiler/SpoilerWrapper\";\nimport Media from \"./TextElements/Media/Media\";\nimport Link from \"./TextElements/Link/Link\";\nimport editorStyles from \"./EditorStyles\";\nimport QuoteBlockWrapper from \"./TextElements/QuoteBlock/QuoteBlockWrapper\";\nimport EditorControls from \"./Controls\";\nimport BaseEditor from \"./BaseEditor\";\nimport {\n  getBlockStyle,\n  findLinkEntities,\n  findSpoilerEntities,\n  filterWhiteListedStyles,\n  createNewImmutableEntity,\n  insertEntityToState,\n} from \"./utils\";\n\nimport \"katex/dist/katex.css\";\nimport \"./css/Draft.css\";\nimport \"./css/Editor.css\";\n\nconst {\n  CompositeDecorator,\n  ContentState,\n  EditorState,\n  RichUtils,\n  DefaultDraftBlockRenderMap,\n  convertToRaw,\n  convertFromRaw,\n  AtomicBlockUtils,\n} = Draft;\n\nconst blockRenderMap = Map({\n  SPOILER: { element: Spoiler },\n  LATEX: { element: TeXBlock },\n});\n\nconst extendedBlockRenderMap = DefaultDraftBlockRenderMap.merge(blockRenderMap);\n\nconst EditorComponent = (props) => {\n\n  const { altEditor, initialState, containerRef } = props;\n\n  let decorator = null;\n  let initialStateEditor;\n\n  if (!altEditor) {\n    decorator = new CompositeDecorator([\n      {\n        strategy: (contentBlock, callback, contentState) =>\n          findLinkEntities(contentBlock, callback, contentState),\n        component: Link,\n      },\n      {\n        strategy: (contentBlock, callback, contentState) =>\n          findSpoilerEntities(contentBlock, callback, contentState),\n        component: Spoiler,\n      },\n    ]);\n  }\n\n  const { createWithContent } = EditorState;\n\n  if (initialState == null) {\n    initialStateEditor = EditorState.createEmpty(decorator);\n  } else {\n    const parsedState = JSON.parse(initialState);\n    const contentState = convertFromRaw(parsedState);\n    initialStateEditor = EditorState.createWithContent(contentState, decorator);\n  }\n\n  const editorRef = useRef(null);\n\n  // State and refs.\n  const [texEdits, setTexEdits] = useState(Map());\n  const [editorState, setEditorState] = useState(initialStateEditor);\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputType, setInputType] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n\n  // Functions.\n  const focus = () => editorRef.current.focus();\n  const readOnly = texEdits.count();\n  const getCurrentContent = () => editorState.getCurrentContent();\n  const customBlockIsActive = () => false; // TODO: revise.\n\n  let _editorStyles = null;\n\n  // If the user has defined which styles to whitelist, use only those.\n  // Otherwise use all of the styles.\n  let filterStyles =\n    props.filterStyles === undefined ? null : props.filterStyles;\n\n  if (filterStyles === null) {\n    _editorStyles = editorStyles;\n  } else {\n    const whiteListed = filterWhiteListedStyles(\n      editorStyles,\n      props.filterStyles\n    );\n    _editorStyles = whiteListed;\n  }\n\n  const getContent = () => {\n    const currentContent = getCurrentContent();\n    return convertToRaw(currentContent);\n  };\n\n  const getPlainText = () => {\n    return getCurrentContent().getPlainText();\n  };\n\n  const removeTex = (blockKey) => {\n    setTexEdits(texEdits.remove(blockKey));\n    setEditorState(removeTeXBlock(editorState, blockKey));\n  };\n\n  const insertTex = (blockKey, newContentState) => {\n    const { createWithContent } = EditorState;\n    const texEditState = texEdits.remove(blockKey);\n    const editorContent = createWithContent(newContentState);\n\n    setTexEdits(texEditState);\n    setEditorState(editorContent);\n  };\n\n  const blockIsActive = (block) => {\n    const selection = editorState.getSelection();\n    const blockType = editorState\n      .getCurrentContent()\n      .getBlockForKey(selection.getStartKey())\n      .getType();\n\n    return block === blockType;\n  };\n\n  const inlineIsActive = (style) => {\n    const currentStyle = editorState.getCurrentInlineStyle();\n\n    if (currentStyle === undefined) return false;\n\n    return currentStyle.has(style);\n  };\n\n  const onChange = (state) => {\n    setEditorState(state);\n    if (props.onChange) props.onChange(getContent());\n  };\n\n  const handleKeyCommand = (command) => {\n    const { handleKeyCommand } = RichUtils;\n    const newState = handleKeyCommand(editorState, command);\n\n    if (newState) {\n      onChange(newState);\n      return true;\n    }\n\n    return false;\n  };\n\n  const customRenderFn = (contentBlock) => {\n    const type = contentBlock.getType();\n    const text = contentBlock.getText();\n\n    if (text === \"media\" || text === \"Image\" || text === \"Video\") {\n      return {\n        component: Media,\n        editable: false,\n      };\n    }\n\n    if (text === \"QuoteBlock\") {\n      return {\n        component: QuoteBlockWrapper,\n        editable: false,\n      };\n    }\n\n    if (type === \"atomic\") {\n      return {\n        component: TeXBlock,\n        editable: false,\n        props: {\n          onStartEdit: (blockKey) => {\n            const texEditState = texEdits.set(blockKey, true);\n            setTexEdits(texEditState);\n          },\n          onFinishEdit: (blockKey, newContentState) =>\n            insertTex(blockKey, newContentState),\n          onRemove: (blockKey) => removeTex(blockKey),\n        },\n      };\n    }\n\n    return null;\n  };\n\n  const selectionIsCollapsed = () => {\n    return editorState.getSelection().isCollapsed();\n  };\n\n  const findStyleObjectByName = (name) => {\n    const customStyles = editorStyles.CUSTOM_STYLES;\n    const matches = customStyles.filter(\n      (style) => style.label === name || style.style === name\n    );\n\n    return matches[0];\n  };\n\n  const insertEntity = (entityName) => {\n    const newEntity = createNewImmutableEntity(editorState, entityName);\n    const newState = insertEntityToState(editorState, newEntity);\n    setEditorState(newState, () => {\n      setTimeout(() => focus(), 0);\n    });\n  };\n\n  const customBlockToggleFn = (blockName, getInput) => {\n    const selectionCollapsed = selectionIsCollapsed();\n    const styleObject = findStyleObjectByName(blockName);\n    const { requiresSelection } = styleObject;\n\n    if (styleObject.toggleFn === null) return;\n\n    if (requiresSelection && selectionCollapsed) return;\n\n    if (styleObject.requiresInput) {\n      setInputVisible(true);\n      setInputType(styleObject.label);\n      return;\n    }\n\n    toggleCustomStyle(styleObject);\n  };\n\n  const confirmInput = (e) => {\n    e.preventDefault();\n\n    const styleObject = findStyleObjectByName(inputType);\n\n    if (styleObject.toggleFn == null) return;\n\n    const newState = styleObject.toggleFn(editorState, inputType, inputValue);\n\n    // Reset input fields.\n    setInputVisible(false);\n    setInputValue(\"\");\n    setInputType(\"\");\n\n    // Set the new editor state.\n    if (newState !== null) setEditorState(newState);\n  };\n\n  const onInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const cancelInput = () => {\n    setInputVisible(false);\n    setInputValue(\"\");\n    setInputType(\"\");\n  };\n\n  const showInput = () => setInputVisible(true);\n\n  const insertCustomBlock = (block) => {\n    const { type, mutability, content } = block;\n\n    const { insertAtomicBlock } = AtomicBlockUtils;\n\n    const contentStateWithEntity = contentState.createEntity(\n      type,\n      mutability,\n      content\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntity,\n    });\n\n    return insertAtomicBlock(newEditorState, entityKey, \" \");\n  };\n\n  const toggleCustomStyle = (styleObject) => {\n    let newState = null;\n\n    switch (styleObject.style.toUpperCase()) {\n      case \"SPOILER\":\n        insertEntity(\"SPOILER\");\n        break;\n\n      case \"LATEX\":\n        const texBlock = getTexBlock();\n        newState = insertCustomBlock(texBlock);\n        break;\n\n      default:\n        break;\n    }\n\n    if (newState !== null) setEditorState(newState);\n  };\n\n  const toggleBlockType = (blockType) => {\n    const { toggleBlockType } = RichUtils;\n    onChange(toggleBlockType(editorState, blockType));\n  };\n\n  const toggleInlineStyle = (inlineStyle) => {\n    const { toggleInlineStyle } = RichUtils;\n    onChange(toggleInlineStyle(editorState, inlineStyle));\n  };\n\n  // TODO: check this out.\n  // If the user changes block type before entering any text, we can\n  // either style the placeholder or hide it. Let's just hide it now.\n  let className = \"RichEditor-editor Editor\";\n  const contentState = editorState.getCurrentContent();\n\n  if (!contentState.hasText()) {\n    if (contentState.getBlockMap().first().getType() !== \"unstyled\") {\n      className += \" RichEditor-hidePlaceholder Editor\";\n    }\n  }\n\n  const clear = () => {\n    const emptyState = ContentState.createFromText(\"\");\n    const clearedState = EditorState.push(editorState, emptyState);\n    setTexEdits(Map());\n    setEditorState(clearedState);\n  };\n\n  // Exposed methods.\n  useImperativeHandle(containerRef, () => {\n    return {\n      clear: clear,\n      getContent: getContent,\n      getPlainText: getPlainText,\n    };\n  });\n\n  return (\n    <div\n      style={{ height: \"100%\" }}\n      ref={containerRef}\n      className=\"em-editor-container\"\n    >\n      <EditorControls\n        editorState={editorState}\n        editorStyles={_editorStyles}\n        onToggleBlock={toggleBlockType}\n        onToggleInline={toggleInlineStyle}\n        selectionCollapsed={selectionIsCollapsed}\n        blockIsActive={blockIsActive}\n        inlineIsActive={inlineIsActive}\n        customBlockIsActive={customBlockIsActive}\n        customBlockToggleFn={customBlockToggleFn}\n        editor={containerRef}\n        inputType={inputType}\n        inputVisible={inputVisible}\n        inputValue={inputValue}\n        confirmInput={confirmInput}\n        onInputChange={onInputChange}\n        cancelInput={cancelInput}\n        showInput={showInput}\n      />\n      <div className={className} onClick={focus} role=\"textbox\" tabIndex={0}>\n        <BaseEditor\n          blockStyleFn={getBlockStyle}\n          blockRendererFn={customRenderFn}\n          blockRenderMap={extendedBlockRenderMap}\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          onChange={onChange}\n          spellCheck={false}\n          readOnly={readOnly}\n          altEditor={altEditor}\n          reference={editorRef}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default EditorComponent;\n","/Users/fdemian/projects/elementary-editor/src/lib/Editor/EditorStyles.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/StyleButton.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/Buttons.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/EditPanel.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/KatexOutput.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/LatexBlock.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/TeXBlock.js",["155"],"import katex from \"katex\";\nimport React, { useState, useEffect } from \"react\";\nimport KatexOutput from \"./KatexOutput\";\nimport EditPanel from \"./EditPanel\";\n\nconst replaceData = (props) => {\n  const { entityKey, data, contentState } = props;\n  return contentState.mergeEntityData(entityKey, data);\n};\n\nconst TeXBlock = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [texValue, setTexValue] = useState(null);\n  const [invalidTeX, setInvalidTeX] = useState(false);\n  const [saveMode, setSaveMode] = useState(false);\n\n  const { contentState, blockProps, block } = props;\n\n  const onClick = () => {\n    if (editMode) return;\n\n    setEditMode(true);\n    setTexValue(getValue());\n    startEdit();\n  };\n\n  const onValueChange = (evt) => {\n    const { value } = evt.target;\n    let invalid = false;\n\n    try {\n      /* eslint-disable */\n      katex.__parse(value);\n      /* eslint-enable */\n    } catch (e) {\n      invalid = true;\n    } finally {\n      setInvalidTeX(invalid);\n      setTexValue(value);\n    }\n  };\n\n  const save = () => {\n    setInvalidTeX(false);\n    setEditMode(false);\n    setSaveMode(true);\n  };\n\n  const startEdit = () => {\n    const key = block.getKey();\n    blockProps.onStartEdit(key);\n  };\n\n  const remove = () => {\n    const key = block.getKey();\n    blockProps.onRemove(key);\n  };\n\n  const getValue = () => {\n    const entity = contentState.getEntity(block.getEntityAt(0));\n    return entity.getData().content;\n  };\n\n  useEffect(() => {\n    if (!editMode && !invalidTeX && saveMode) {\n      const editKey = block.getEntityAt(0);\n      const props = {\n        entityKey: editKey,\n        data: { content: texValue },\n        contentState: contentState,\n      };\n      let _newState = replaceData(props);\n      blockProps.onFinishEdit(editKey, _newState);\n    }\n  }, [editMode, invalidTeX, saveMode, block, contentState, texValue]);\n\n  // TODO: Colapse into one line.\n  let texContent = null;\n  if (editMode) {\n    texContent = invalidTeX ? \"\" : texValue;\n  } else {\n    texContent = getValue();\n  }\n\n  let className = \"TeXEditor-tex\" + (editMode ? \" TeXEditor-activeTeX\" : \"\");\n\n  return (\n    <div className={className}>\n      <KatexOutput content={texContent} onClick={onClick} />\n      <EditPanel\n        editMode={editMode}\n        onValueChange={onValueChange}\n        texValue={texValue}\n        invalidTeX={invalidTeX}\n        save={save}\n        remove={remove}\n      />\n    </div>\n  );\n};\n\nexport default TeXBlock;\n","/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/test/component.test.js",["156","157"],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/test/utilFunctions.test.js",["158","159"],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Latex/texUtils.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Link/Link.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Link/RenderLink.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Link/component.test.js",["160"],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Media/Media.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Media/component.test.js",["161"],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/QuoteBlock/QuoteBlock.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/QuoteBlock/QuoteBlockWrapper.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/QuoteBlock/component.test.js",["162"],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Spoiler/Spoiler.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Spoiler/SpoilerWrapper.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/TextElements/Spoiler/component.test.js",["163"],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/URLInput.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/test/component.test.js",["164","165","166","167","168","169"],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/test/utils.test.js",["170","171","172"],"/Users/fdemian/projects/elementary-editor/src/lib/Editor/utils.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/index.js",[],"/Users/fdemian/projects/elementary-editor/src/lib/testingUtils.js",[],"/Users/fdemian/projects/elementary-editor/src/setupTests.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":19},{"ruleId":"177","severity":1,"message":"181","line":135,"column":11,"nodeType":"179","messageId":"180","endLine":135,"endColumn":19},{"ruleId":"177","severity":1,"message":"182","line":66,"column":11,"nodeType":"179","messageId":"180","endLine":66,"endColumn":28},{"ruleId":"183","severity":1,"message":"184","line":75,"column":6,"nodeType":"185","endLine":75,"endColumn":69,"suggestions":"186"},{"ruleId":"177","severity":1,"message":"187","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":16},{"ruleId":"177","severity":1,"message":"188","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":17},{"ruleId":"177","severity":1,"message":"189","line":1,"column":23,"nodeType":"179","messageId":"180","endLine":1,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":31,"column":18,"nodeType":"192","messageId":"193","endLine":31,"endColumn":20},{"ruleId":"177","severity":1,"message":"194","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"194","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"194","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"195","line":4,"column":19,"nodeType":"179","messageId":"180","endLine":4,"endColumn":25},{"ruleId":"177","severity":1,"message":"196","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":23},{"ruleId":"177","severity":1,"message":"197","line":4,"column":27,"nodeType":"179","messageId":"180","endLine":4,"endColumn":32},{"ruleId":"177","severity":1,"message":"198","line":5,"column":17,"nodeType":"179","messageId":"180","endLine":5,"endColumn":24},{"ruleId":"177","severity":1,"message":"199","line":28,"column":7,"nodeType":"179","messageId":"180","endLine":28,"endColumn":20},{"ruleId":"177","severity":1,"message":"200","line":65,"column":10,"nodeType":"179","messageId":"180","endLine":65,"endColumn":22},{"ruleId":"177","severity":1,"message":"201","line":346,"column":9,"nodeType":"179","messageId":"180","endLine":346,"endColumn":15},{"ruleId":"177","severity":1,"message":"202","line":3,"column":2,"nodeType":"179","messageId":"180","endLine":3,"endColumn":14},{"ruleId":"177","severity":1,"message":"203","line":9,"column":3,"nodeType":"179","messageId":"180","endLine":9,"endColumn":15},{"ruleId":"177","severity":1,"message":"204","line":63,"column":11,"nodeType":"179","messageId":"180","endLine":63,"endColumn":21},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'ReactPlayer' is defined but never used.","Identifier","unusedVar","'videoSrc' is assigned a value but never used.","'createWithContent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'blockProps'. Either include it or remove the dependency array.","ArrayExpression",["207"],"'Button' is defined but never used.","'shallow' is defined but never used.","'ContentState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Enzyme' is defined but never used.","'render' is defined but never used.","'useRef' is defined but never used.","'mount' is defined but never used.","'Tooltip' is defined but never used.","'addEmptyBlock' is assigned a value but never used.","'initialState' is assigned a value but never used.","'editor' is assigned a value but never used.","'ContentBlock' is defined but never used.","'findEntities' is defined but never used.","'blockquote' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},"Update the dependencies array to be: [editMode, invalidTeX, saveMode, block, contentState, texValue, blockProps]",{"range":"210","text":"211"},[1809,1872],"[editMode, invalidTeX, saveMode, block, contentState, texValue, blockProps]"]